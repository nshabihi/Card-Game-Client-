<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-600</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initializing room
xview = view_xview[0];
yview = view_yview[0];
vwidth = view_wview[0];
vheight = view_hview[0];
//end of initializing room

    answerIndex = 5; 
    temp=7;
    temp1=7;
    flag=false;
    global.nextExamQuestion = 0;
    xx = 200 ;
    yy = 120 * (vheight/720) ;
    randomize();
    answerIndex = irandom(3);
    tempCard = string_lower( ds_queue_dequeue(global.examList_queue)); //answer card
    examChoiceArray[0] = tempCard; // array of vocabs in this exam
    global.pointExamSingle = 4000;
    ds_map_clear(global.examChoicesId);
    ds_map_clear(global.isExamCardClicked);
    global.progressLifters_singleExam = ds_queue_create();


    for (i=0 ; i&lt;4 ; i++)
    {
        if(i == answerIndex)
        {
            var choice = instance_create( (room_width/2 + xx * (i-1.5)) ,
                                         (room_height/2 + yy),
                                         obj_examChoices_totalExam_single);
            
            choice.type = ds_map_find_value(global.card_vocab , tempCard);
            choice.verb = tempCard;
            //choice.type = string("spr"+string(global.examNum)+"_"+ string(global.ExamIndex [global.questionNum]+1)+"_1");
            choice.isAnswer = 1;
            //ds_map_add(global.examChoicesId, choice.id , choice.type);
            //ds_map_add(global.isExamCardClicked, choice.id , false);

        }
        else
        {
            notValid = false;
            flag = false;
            while (!flag)
            {
                randomize();
                rand = scr_random_exam_choice();
                for(j= 0 ; j&lt;array_length_1d(examChoiceArray) ; j++)
                    if(global.verbDataBase[rand] == examChoiceArray[j])
                        notValid = true;
                if(notValid == true)
                    {flag = false;
                    notValid = false;
                    }
                else
                    flag = true;
            }
            examChoiceArray[array_length_1d(examChoiceArray)] = global.verbDataBase[rand];
            
            var choice = instance_create(   (room_width/2 + xx * (i-1.5)) , 
                                           (room_height/2 + yy),
                                             obj_examChoices_totalExam_single); 


            choice.verb = global.verbDataBase[rand];
            choice.type = ds_map_find_value(global.card_vocab , global.verbDataBase[rand]); //string("spr"+string(global.examNum)+"_"+ string(temp1+1)+"_1"); 
            choice.isAnswer = 0 ;
            choice.trueVerb = tempCard;
            //ds_map_add(global.examChoicesId, choice.id , choice.type);
            //ds_map_add(global.isExamCardClicked, choice.id , false);
              
        }
    }
    
    var choice = instance_create(   room_width/2 , 
                                   (yview+ 180*(vheight/720)),
                                    obj_examChoices_totalExam_single); 

    choice.type = ds_map_find_value(global.card_vocab , tempCard+"+p"); 
    
    choice.isAnswer = 2; // this card is the question not the choices to can be select
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_examChoices_totalExam_single)
{   instance_destroy(); }

with(obj_newExamRoom_loader)
{   event_user(0);  }


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
