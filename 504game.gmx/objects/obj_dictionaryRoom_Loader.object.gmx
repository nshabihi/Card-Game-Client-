<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_roomLoaderParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

vheight = view_hview[0];
vwidth = view_wview[0];
xview   = view_xview[0];
yview   = view_yview[0];



//var room1_obj1 = instance_create(10,10,obj_subLevelCtrl);
global.text_input_dictionary = "";
global.keyboardInputID = id;
keyboard_string = global.text_input_dictionary;
type = 3;
var get_letter = instance_create(10,10,obj_keyboard);

global.verbID = 10001;

///////create show meaning btn vheight + yview - keyboardHeight - 20;
var show_meaning_btn = instance_create(xview + vwidth / 2, vheight + yview - vwidth * (180 / 800) - 75 * (vheight / 720), obj_show_dictionary_result_btn);

edit = 1;
image_speed = 0;
blink = 0;
alarm[0] = 20;
finished = false;
update_index = 9; // passed on creation

if(object_exists(obj_questionarie))
    with(obj_questionarie)          { instance_destroy(); }
with(obj_setting)                   { instance_destroy(); }
with(obj_dictionary)                { instance_destroy(); }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Blink our "Fake" cursor
if(blink &gt; -1){
  blink = !blink;
}
alarm[0] = 20;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_alpha(obj_hiscore.alpha);
draw_set_font(fnt_keyboard_arial);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);
//draw_roundrect(x-3,y-10,x+(16*11),y+11,false);
//draw_set_color(c_black);
//draw_roundrect(x-3,y-10,x+(16*11),y+11,true);
//var tempColor = make_color_rgb(128,67,53);
//var tempColor = make_color_rgb(65,38,12);
var col = make_color_rgb(100,54, 41);
draw_set_colour(col);

marker = " ";

//if(string_length(global.text_input_dictionary) &gt; 18)
global.text_input_dictionary = string_copy(global.text_input_dictionary , 1 , 18);

//if(global.keyboardInputID == id or global.keyboardInputID == 0)
//{
if(blink == 1){marker = "|";}
//}
/// Display the text inpu
if(global.text_input_dictionary == "")
{  
    draw_text_transformed(xview + vwidth/2 - (string_width("Enter a word"))/2,yview + 150 * (vheight / 720),"Enter a word"+marker, 1,1,0);
}
else
{
    draw_text_transformed(xview + vwidth/2 - (string_width(global.text_input_dictionary))/2,yview + 150 * (vheight / 720),global.text_input_dictionary+marker, 1,1,0);  
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
