<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.secondsForGame = 0; //Result of HAMASE
global.seconds = 0; 
global.minutes = 0;
global.hours = 0;

global.countUp = false;


global.secondsForPlayer = 0;
global.minutesForPlayer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.miniGameStarted == 1 and global.countUp = true)
{
    global.seconds += 1/room_speed ;
    global.secondsForGame += 1/room_speed;
}

if (global.seconds &gt;= 60/* and global.seconds &gt; 59.9*/)
{
    global.seconds = 0; 
    global.minutes += 1;
}

if (global.minutes &gt;= 60)
{
    global.minutes = 0;
    global.hours += 1;
}

global.secondsForPlayer += 1/room_speed;

if(global.secondsForPlayer &gt;= 60)
{
    global.secondsForPlayer = 0;
    global.minutesForPlayer += 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// point displaying
//these three variavles is defined in obj_roomLoaderParent : global.headerX - global.headerY - global.progressBarWidth
/*
draw_set_font(fnt_bigJohn);
draw_set_color(c_lime);

if(global.seconds &lt; 10 and global.minutes &lt;10)
{
    draw_text(global.headerX + global.progressBarWidth , global.headerY-global.progressBarHight/2+100 ,  string(global.hours) + ":0" + 
                        string(global.minutes)+":0" +
                        string(global.seconds));
}
else if(global.seconds &gt;= 10 and global.minutes &gt;=10)
{
    draw_text(global.headerX+global.progressBarWidth ,global.headerY-global.progressBarHight/2+100 ,  string(global.hours) + ":" + 
                        string(global.minutes)+":" +
                        string(global.seconds));
}

else if(global.seconds &lt; 10 and global.minutes &gt;=10)
{
    draw_text(global.headerX+global.progressBarWidth ,global.headerY-global.progressBarHight/2+100 ,  string(global.hours) + ":" + 
                        string(global.minutes)+":0" +
                        string(global.seconds));
}
else if(global.seconds &gt;= 10 and global.minutes &lt;10)
{
    draw_text(global.headerX+global.progressBarWidth ,global.headerY-global.progressBarHight/2+100 ,  string(global.hours) + ":0" + 
                        string(global.minutes)+":" +
                        string(global.seconds));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
