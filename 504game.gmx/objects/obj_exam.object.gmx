<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_exam_hud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-599</depth>
  <persistent>0</persistent>
  <parentName>obj_hudParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>examBtn = 0;
type = "exam";

drawAlpha = 6*pi;
alpha = 1;
maxDGA = drawAlpha;
wait = 1;
alarm[0] = room_speed * 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait = 0;
drawAlpha = 6*pi;
alpha = 1;
maxDGA = drawAlpha;
alarm[1] = room_speed*5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait = 0;
alarm[1] = room_speed*5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dictionaryBtn = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(examBtn == 1)
{
    //initializing room
    dwidth = ds_map_find_value(global.roomInt , "dwidth");
    dheight = ds_map_find_value(global.roomInt , "dheight");
    xview = ds_map_find_value(global.roomInt , "xview");
    yview = ds_map_find_value(global.roomInt , "yview");
    vwidth = ds_map_find_value(global.roomInt , "vwidth");
    vheight = ds_map_find_value(global.roomInt , "vheight");
    room_set_view(room_exam_new , 0, 1, xview, yview , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
    room_goto(room_exam_new);
    //end of initializing room
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.networkIsConnected ==1)
    if((!ds_queue_empty(global.examList_queue_backUp)) or !ds_queue_empty(global.userAllExamsList))
    {
        if(can_press == 1)
            examBtn = 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//no inheritance
if((!ds_queue_empty(global.examList_queue_backUp)) or !ds_queue_empty(global.userAllExamsList))
{
    if(flasher == true)
    {
        if(wait == 0)
        {
            if(drawAlpha &lt;= pi/2) drawAlpha = pi/2;
            alpha= sqrt(drawAlpha)*sin(drawAlpha)/(maxDGA);
            drawAlpha -= pi/8;
            draw_sprite_ext(spr_exam_hud, 0 , x, y, (scale+(1/2)*alpha), (scale+(1/2)*alpha), 0 , -1 , 1);
        }
        //time for age questionnarie
        else if(drawAlpha == pi/2)
        {
            draw_sprite_ext(spr_exam_hud, 0 , x , y ,scale, scale, 0 , -1  , 1);
            wait ++;
        }
        else
            draw_sprite_ext(spr_exam_hud, 0 , x , y ,scale, scale, 0 , -1  , 1);
           
    }
    else
        draw_sprite_ext(spr_exam_hud, 0 , x , y ,scale, scale, 0 , -1  , 1);
}
else
{
        draw_sprite_ext(spr_exam_hud, 1, x , y ,scale, scale, 0 , -1  , 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>50,50</point>
    <point>50,50</point>
  </PhysicsShapePoints>
</object>
