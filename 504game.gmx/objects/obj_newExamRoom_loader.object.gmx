<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_roomLoaderParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//var progress = instance_create(10,10,obj_ProgressBarControler);
//var point = instance_create(10,10,obj_showScore);


xview  = view_xview[0];
yview  = view_yview[0];
vwidth = view_wview[0];
vheigth= view_hview[0];


audio_sound_gain(snd_fun_backgound, 0, 500);
global.checkPlayingSound = true;
alarm[1] = room_speed / 2;

with (obj_badges)
    {instance_destroy();}

with (obj_leaderBoard)
    {instance_destroy();}
    
with (obj_setting)
    {instance_destroy();}
    
with (obj_dictionary)
    {instance_destroy();}

with (obj_bottomBar)
    {instance_destroy();}
    
with (obj_exam)
    {instance_destroy();}
    
with(obj_ProgressBarControler)  
    { instance_destroy(); }
    
with(obj_showScore)
    { instance_destroy(); }
    
if(object_exists(obj_questionarie))
    with(obj_questionarie)          
        { instance_destroy(); }

tempQ = ds_queue_create();
//ds_queue_copy(tempQ, global.userAllExamsList);
var tttemp = ds_queue_size(global.userAllExamsList);


for(j = 0; j&lt; tttemp; j++)
{
    ds_queue_enqueue(tempQ, ds_queue_dequeue(global.userAllExamsList));
}

global.items_er[0] = "-1";
global.sprites_er[0] = "-1";
global.items_er_meaning[0] = "-1";

global.examResultItemCount = ds_queue_size(tempQ);

for(i = 0; i&lt; global.examResultItemCount; i++)
{
    tempVocab = ds_queue_dequeue(tempQ);
    ds_queue_enqueue(global.userAllExamsList, tempVocab);
    
    global.items_er[i] = tempVocab;
    global.sprites_er[i] = asset_get_index(ds_map_find_value(global.card_vocab,string_lower(tempVocab)+"+p"));
    global.items_er_meaning[i]  = ds_map_find_value(global.meaning_map_Fa_short , string_lower(tempVocab));
}

userExamTotalScore   = 0;
userExamWrongCount   = 0;
userExamCorrectCount = 0;

global.maximumExamCount     = 0;
global.thisExamNumber       = 0;
event_user(0);


requestAddress = "";
timer = 0;
alarm[0] = room_speed * 1;


var temp = floor(global.indexOfLastLevel / 7);
if(temp == 6) temp = 5;

randomize();
backTempIndex = irandom(temp)+1;

global.tutorialType = 5;
//instance_create(xview + vwidth / 2, yview + vheigth /2, obj_tutorial);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_pause_sound(snd_fun_backgound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer ++;
alarm[0] = room_speed * 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dwidth = ds_map_find_value(global.roomInt , "dwidth");
dheight = ds_map_find_value(global.roomInt , "dheight");
xview = ds_map_find_value(global.roomInt , "xview");
yview = ds_map_find_value(global.roomInt , "yview");
vwidth = ds_map_find_value(global.roomInt , "vwidth");
vheight = ds_map_find_value(global.roomInt , "vheight");

    level = 0;

    if(global.levelNum == "" )
    {
        if(global.indexOfLastLevel == 0)
            level = 1;
        else
            level = global.indexOfLastLevel; 
    }
    else
    {
        if(((real(global.levelNum)-1)*7 + real(global.subLevelNum))+1 &lt;43)
            level = ((real(global.levelNum)-1)*7 + real(global.subLevelNum));
        else 
            level = 42;
    }
        
    lastPlayed_y = ds_map_find_value(global.yPositionOfLevelNumbers , level);
    
yBasedLastPlayed = lastPlayed_y - vheight*1/8;
    if(yBasedLastPlayed &gt; 5660 - vheight )
        yBasedLastPlayed = 5660 - vheight;

    
room_set_view(room_levelSelection, 0, 1, xview, yBasedLastPlayed , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
room_goto(room_levelSelection);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_update_userExamList_data();
/*
scr_show_queue(global.examCardNumbers);
scr_show_queue(global.userAllExamsList);
scr_show_queue(global.examList_queue);
*/
if(!ds_queue_empty(global.examList_queue))
{
    //destroy previous exam
    if instance_exists(obj_examCard)
        with(obj_examCard)
            {instance_destroy();}

    if instance_exists(obj_totalGameExam_matching)
        with (obj_totalGameExam_matching)
            {instance_destroy();}
            
    if instance_exists(obj_totalGameExam_single)
        with (obj_totalGameExam_single)
            {instance_destroy();}
            
    if instance_exists(obj_examChoices_totalExam_single)
        with (obj_examChoices_totalExam_single)
            {instance_destroy();}
    
    if instance_exists(obj_ProgressBarControler)
        with (obj_ProgressBarControler)
            {instance_destroy();}

    if instance_exists(obj_showScore)
        with (obj_showScore)
            {instance_destroy();}                
    
    if(global.examCardN == 1)
    {
        var room1_obj1 = instance_create(10,10,obj_totalGameExam_single);
    }
    else
    {
        instance_create(100 , 100 , obj_totalGameExam_matching); //new exam
    }
}
else
{
    scr_add_wrong_cars_to_allExams();


    global.lastLevelScore      = userExamTotalScore;
    global.lastLevelPlayedWrong= userExamWrongCount;
    global.lastLevelCorrect    = userExamCorrectCount;
 
    global.popupType = 4; // exam result
    var popupBack    = instance_create(0,0,obj_popup_back);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>requestAddress  = global.baseUrl+"Timer/getExamTimer?";
requestAddress += "Auth="  + string(global.deviceId)+","+string(global.username);
requestAddress += "&amp;time=" + string(timer);

scr_enqueueReqQ(requestAddress , "examTimer");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xscale = view_wview[0] / 1140;
yscale = view_hview[0] / 720;
backgroundTemp = "bg_lvl" + string(backTempIndex);
draw_background_ext(asset_get_index(backgroundTemp),view_xview[0],view_yview[0],xscale*2, yscale*2, 0 , -1, 1);


var tempColor = make_color_rgb(128,67,53);
draw_set_colour(tempColor);
draw_set_font(fnt_bigJohn);
draw_text_transformed(xview + vwidth/2 - 19 * (vwidth / 1140),yview + vheigth -  52 * (vheigth / 720), string(global.thisExamNumber),0.8,0.8,0);
draw_text_transformed(xview + vwidth/2                       ,yview + vheigth -  39 * (vheigth / 720), "/",1.1,1.1,-10);
draw_text_transformed(xview + vwidth/2 + 19 * (vwidth / 1140),yview + vheigth -  26 * (vheigth / 720), string(global.maximumExamCount),0.9,0.9,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
