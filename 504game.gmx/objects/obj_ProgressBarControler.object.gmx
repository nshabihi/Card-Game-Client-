<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-599</depth>
  <persistent>0</persistent>
  <parentName>obj_hudParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_inherited();
type = "progress";
surf = surface_create(512, 512);

xview = view_xview[0];
yview = view_yview[0];
vwidth = view_wview[0];
vheight = view_hview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vwidth = ds_map_find_value(global.roomInt , "vwidth");
vheight = ds_map_find_value(global.roomInt , "vheight");

if(global.userProgressRange[1] == global.userProgressRange[0])
    ProgresPercent = 0.5;
else
    ProgresPercent = (global.ProgressScore - global.userProgressRange[0]) / (global.userProgressRange[1] - global.userProgressRange[0]);
//ProgresPercent = 1;//draw_text(room_width/2 , 200 ,ProgresPercent);
draw_sprite_ext(spr_progress_1 , 0 , x , y , 1 , 1 , 0 , -1 , 1);
if !surface_exists(surf)
    surf = surface_create(256, 16);
surface_set_target(surf);
draw_clear_alpha(c_black, 0);
draw_sprite_ext(spr_progress_2 , 0 , 177*ProgresPercent , 7/**vheight/720*/ , 1 , 1 , 0 , -1 , 1);
surface_reset_target();

//draw_sprite_ext(spr_progress_2 , 0 , x+132+168*ProgresPercent , y +64/**vheight/720*/ , ProgresPercent , 1.1 , 0 , -1 , 1);
//draw_sprite_ext(spr_progress_3 , 0 , x+132+168*ProgresPercent , y +64/**vheight/720*/ , 1.1 , 1 , 0 , -1 , 1);
draw_surface(surf , x+132 , y+64);
draw_set_font(fnt_bigJohn);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_text_transformed(x+80, y+67, global.userProgressLevel, 1.2 , 1.2 , 12);
col = make_color_rgb(190,126,43);
draw_set_color(col);
draw_text_transformed(x+336, y+70, (floor(ProgresPercent*20)), 0.5 , 0.5 , 0);

//draw_text_transformed_ext(x+global.headerX, y+global.headerY, global.userProgressLevel, 1 , 1 ,0);
//global.userProgressPerc

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
