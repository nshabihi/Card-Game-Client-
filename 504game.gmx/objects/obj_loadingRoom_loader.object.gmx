<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_roomLoaderParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
//scr_black();

x1 = 0;
x2 = -6;
x3 = -12;
x1Direction = 1;
x2Direction = 1;
x3Direction = 1;

checkPopUp = 1;

global.loading = 0;
global.loadingDraw = 0;

versionToCheck = 111;

global.gotoVersionControlPopUP = false;
global.sendLoginRequest_register = false;



scr_enqueueReqQ(global.baseUrl+"Authentication/checkVersion?version="+string(versionToCheck) ,"checkVersion");



//// added beacouse of login error
//alarm[0] = room_speed * 1.5;
///////////////////////////////

with(obj_bottomBar)             { instance_destroy(); }
with(obj_ProgressBarControler)  { instance_destroy(); }
with(obj_showScore)             { instance_destroy(); }
with(obj_setting)               { instance_destroy(); }
with(obj_dictionary)            { instance_destroy(); }
with(obj_badges)                { instance_destroy(); }
with(obj_leaderBoard)           { instance_destroy(); }
with(obj_map)                   { instance_destroy(); }
with(obj_exam)                  { instance_destroy(); }
if(object_exists(obj_questionarie))
    with(obj_questionarie)          { instance_destroy(); }  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//// added beacouse of login error
//initialization of room
dwidth = ds_map_find_value(global.roomInt , "dwidth");
dheight = ds_map_find_value(global.roomInt , "dheight");
xview = ds_map_find_value(global.roomInt , "xview");
yview = ds_map_find_value(global.roomInt , "yview");
vwidth = ds_map_find_value(global.roomInt , "vwidth");
vheight = ds_map_find_value(global.roomInt , "vheight");
room_set_view(firstRoom, 0, 1, xview, yview , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
room_goto(firstRoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
global.loading += 1/room_speed ;  
global.loadingDraw += 10/room_speed; 
yBasedLastPlayed = 0;


if(global.forceUpdateProgram == 0 and global.updateIfYouWant == 0)
{
    if(global.sendLoginRequest_register == false)
    {
        global.sendLoginRequest_register = true;
        
        if(file_exists("game504Data.ini"))
        {
            ini_open("game504Data.ini");
            global.username      = ini_read_string('Authentication','username',"");
            global.deviceId      = ini_read_string('Authentication','deviceId',"");
            global.loginUniqueId = ini_read_string('Authentication','loginUniqueId',"");
            ini_close();
            //show_message("Aim for the moon. If you miss, you may hit a star. -Clement Stone-");
            //scr_enqueueReqQ(global.baseUrl+"Authentication/logout","logout");
            //show_message(string(global.username));
            scr_enqueueReqQ(global.baseUrl+"Authentication/login?username="+string(global.username)+"&amp;deviceId="+string(global.deviceId)+"&amp;loginUid="+string(global.loginUniqueId),"login");
        }else
        {
            global.ErrorInLogin = 1;
        }
    }
}
else if(global.versionRequestRicieved == true)
{
    if(global.gotoVersionControlPopUP == false)
    {
        global.popupType  = 8; // versionControl
        var popupBack     = instance_create(0,0,obj_popup_back);
        global.gotoVersionControlPopUP = true;
    }
}


if(global.loading &gt; 2)
{
    if (global.loginGotoMain == 1)
    {
        global.loginGotoMain = 0;
        //initializing room
        dwidth = ds_map_find_value(global.roomInt , "dwidth");
        dheight = ds_map_find_value(global.roomInt , "dheight");
        xview = ds_map_find_value(global.roomInt , "xview");
        yview = ds_map_find_value(global.roomInt , "yview");
        vwidth = ds_map_find_value(global.roomInt , "vwidth");
        vheight = ds_map_find_value(global.roomInt , "vheight");

        level = 0;

        if(global.levelNum == "")
        {
            if(global.indexOfLastLevel == 0)
                level = 1;
            else
                level = global.indexOfLastLevel; 
        }
        else
        {
            if(((real(global.levelNum)-1)*7 + real(global.subLevelNum))+1 &lt;43)
                level = ((real(global.levelNum)-1)*7 + real(global.subLevelNum));
            else
                level = 42;
        }
            
        lastPlayed_y = ds_map_find_value(global.yPositionOfLevelNumbers , level);
        yBasedLastPlayed = lastPlayed_y - vheight*2/8;
        if(yBasedLastPlayed &gt; 5660 - vheight )
            yBasedLastPlayed = 5660 - vheight;
    
            room_set_view(room_levelSelection, 0, 1, xview, yBasedLastPlayed , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
            room_goto(room_levelSelection);
            //end of initializing room
    }
    else if(global.ErrorInLogin == 1)
    {
        global.ErrorInLogin  = 0;
        //initializing room
/*        dwidth = ds_map_find_value(global.roomInt , "dwidth");
        dheight = ds_map_find_value(global.roomInt , "dheight");
        xview = ds_map_find_value(global.roomInt , "xview");
        yview = ds_map_find_value(global.roomInt , "yview");
        vwidth = ds_map_find_value(global.roomInt , "vwidth");
        vheight = ds_map_find_value(global.roomInt , "vheight");
        room_set_view(room_register, 0, 1, xview, yview , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
*/
//        room_goto(room_register);
        //end of initializing room
        
        global.popupType = 1;
        if(checkPopUp == 1){
            var popupBack = instance_create(0,0,obj_popup_back);
            checkPopUp    = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite(spr_loading , 0 , room_width/2+ (sin(global.loadingDraw))*80, room_height/2+(cos(global.loadingDraw))*80);
//draw_sprite(spr_loadingText , 0 , room_width/2 , room_height/2);
//draw_sprite(spr_loading_circle,0,room_width/2-150, room_height/2+195);
//draw_sprite(spr_loading_circle,0,room_width/2, room_height/2+195);
//draw_sprite(spr_loading_circle,0,room_width/2+150, room_height/2+195);

if(x1&lt;0) x11 = 0 else x11 = x1;
if(x2&lt;0) x22 = 0 else x22 = x2;
if(x3&lt;0) x33 = 0 else x33 = x3;

draw_sprite_ext(spr_loading_circle,0,room_width/2-75, room_height/2+205,0.9+x11*0.08/4,1+x11*0.08/4,0,-1,1);
draw_sprite_ext(spr_loading_circle,0,room_width/2, room_height/2+205,0.9+x22*0.08/4,1+x22*0.08/4,0,-1,1);
draw_sprite_ext(spr_loading_circle,0,room_width/2+75, room_height/2+205,0.9+x33*0.08/4,1+x33*0.08/4,0,-1,1);


if(x1 == 0 and x1Direction == -1)
{    x1 = -12; x1Direction = 1;}
if(x2 == 0 and x2Direction == -1)
{    x2 = -12; x2Direction = 1;}
if(x3 == 0 and x3Direction == -1)
{    x3 = -12; x3Direction = 1;}

if(x1 == 12)
    x1Direction = -1;
    
if(x2 == 12)
    x2Direction = -1;
    
if(x3 == 12)
    x3Direction = -1;
    
x1 += x1Direction;
x2 += x2Direction;
x3 += x3Direction;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
