<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_map_hud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-599</depth>
  <persistent>0</persistent>
  <parentName>obj_hudParent</parentName>
  <maskName>spe_tinyMap_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gameBack = 0;

drawAlpha = 4*pi;
alpha = 1;
maxDGA = drawAlpha;
wait = 0;
alarm[0] = room_speed * 2;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawAlpha = 4*pi;
alpha = 1;
maxDGA = drawAlpha;
wait = 0;
alarm[0] = room_speed * 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gameBack = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.gameBack == 1)
{

    if(room == room_exam_new)
    {
        scr_update_userExamList_data();
        scr_add_wrong_cars_to_allExams();
    }

    //initializing room
    dwidth = ds_map_find_value(global.roomInt , "dwidth");
    dheight = ds_map_find_value(global.roomInt , "dheight");
    xview = ds_map_find_value(global.roomInt , "xview");
    yview = ds_map_find_value(global.roomInt , "yview");
    vwidth = ds_map_find_value(global.roomInt , "vwidth");
    vheight = ds_map_find_value(global.roomInt , "vheight");

    
    
    level = 0;

    if(global.levelNum == "" )
    {
        if(global.indexOfLastLevel == 0)
            level = 1;
        else
            level = global.indexOfLastLevel; 
    }
    else
    {
        if(((real(global.levelNum)-1)*7 + real(global.subLevelNum))+1 &lt;43)
            level = ((real(global.levelNum)-1)*7 + real(global.subLevelNum));
        else 
            level = 42;
    }
        
    lastPlayed_y = ds_map_find_value(global.yPositionOfLevelNumbers , level);
    
    
    
    yBasedLastPlayed = lastPlayed_y - vheight*(2/8);
        if(yBasedLastPlayed &gt; 5660 - vheight )
            yBasedLastPlayed = 5660 - vheight;

        
    room_set_view(room_levelSelection, 0, 1, xview, yBasedLastPlayed , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
    room_goto(room_levelSelection);
    //end of initializing room
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.networkIsConnected ==1)
    if(can_press == 1)
        global.gameBack = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//for vk_backSpace

//initializing room
    dwidth = ds_map_find_value(global.roomInt , "dwidth");
    dheight = ds_map_find_value(global.roomInt , "dheight");
    xview = ds_map_find_value(global.roomInt , "xview");
    yview = ds_map_find_value(global.roomInt , "yview");
    vwidth = ds_map_find_value(global.roomInt , "vwidth");
    vheight = ds_map_find_value(global.roomInt , "vheight");

    level = 0;

    if(global.levelNum == "" )
    {
        if(global.indexOfLastLevel == 0)
            level = 1;
        else
            level = global.indexOfLastLevel; 
    }
    else
    {
        if(((real(global.levelNum)-1)*7 + real(global.subLevelNum))+1 &lt;43)
            level = ((real(global.levelNum)-1)*7 + real(global.subLevelNum));
        else 
            level = 42;
    }
        
    lastPlayed_y = ds_map_find_value(global.yPositionOfLevelNumbers , level);
    
    
    yBasedLastPlayed = lastPlayed_y - vheight*(2/8);
        if(yBasedLastPlayed &gt; 5660 - vheight )
            yBasedLastPlayed = 5660 - vheight;

        
    room_set_view(room_levelSelection, 0, 1, xview, yBasedLastPlayed , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
    room_goto(room_levelSelection);
    //end of initializing room



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//no inheritance
xscale = 1;
yscale = 1;
object_set_mask(id, spe_tinyMap_mask);
mask_index = spe_tinyMap_mask;
if( room == room_questionnarieResult)
{
    if(wait == 0)
    {
        if(drawAlpha &lt;= pi/2) {drawAlpha = pi/2; wait = 0;}
        alpha= sqrt(drawAlpha)*sin(drawAlpha)/(maxDGA);
        drawAlpha -= pi/8;
        draw_sprite_ext( spr_map_hud, 0, x, y , (1/2)*xscale+(1/5)*alpha, (1/2)*yscale+(1/5)*alpha, 0, -1, 1 );
    }
    //time for age questionnarie
    else if(wait == 1)
    {
        draw_sprite_ext( spr_map_hud, 0, x, y , (1/2)*xscale, (1/2)*yscale, 0, -1, 1 );
    
        wait = 1;
    }
}
else if(room == rm_gameWorld or room == room_qest)
    draw_sprite_ext( spr_map_hud, 0, x, y , (3/4)*xscale, (3/4)*yscale, 0, -1, 1 );
else
{
    object_set_mask(id, spr_map_hud);
    mask_index = spr_map_hud;
    draw_sprite_ext( spr_map_hud, off, x, y , scale, scale, 0, -1, 1 );
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>50,30</point>
    <point>50,50</point>
  </PhysicsShapePoints>
</object>
