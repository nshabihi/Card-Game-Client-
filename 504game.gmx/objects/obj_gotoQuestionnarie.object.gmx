<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_startQuest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pressed = false;
draw = 0;
alpha = 0;
beta = 0;
teta = 0;
firstLine = ".kÃÀj gwIQ SÃ~h{ ¾¶I¹zwoQ R¯H¼w ¾M S¤j IM » ¾ºI¤jI‚ IŸõ²";
secondLine = "¾£Ã¤j ½j pH oTµ¨ :ÂÄ¼«hwIQ ÁHoM pIÃº jn¼¶ ·I¶p";
secondLine = "¾£Ã¤j ½j :pIÃº jn¼¶ ·I¶p ,ÏH¼w S~{";
thirdLine= ".kÄ¼{ ¸Fµõ¶ SºoT¹ÄH ÏI~UH pH R¯H¼w ¾M ÂÄ¼«hwIQ pH ®L¤";

firstWidth = string_width(firstLine);
secondWidth = string_width(secondLine);
x = room_width/2; 
y = 1000; //out of screen




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*xview = view_xview[0];
yview = view_yview[0];
vwidth = view_hview[0];

global.answer[120] = -1;
    for(i=0 ; i&lt; 125 ; i++)
        global.answer[i] = -1;

for (i=0; i&lt;2; i++)
{
    var radioBtn = instance_create(xview + vwidth - 100 , yview + 80 + 60*i , obj_radio);
    radioBtn.num = i;
    global.radioID[i] = radioBtn.id;
} 
global.question_num = 1;
global.lastQuestion = 1;
global.drawQuestion= -1;
var previouseBtn = instance_create(xview + 200 , yview + 450 , obj_questionariePreviouse);

//questionnarie badge
for (i=1; i&lt;61; i+=1)
{
    global.questionnarieBadge[i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pressed = true;
draw = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(pressed == true)
{
    pressed = false;
    //alarm[0] = room_speed*0.5;
    draw = 2;
    
    with(obj_questionnarie_NEWRoom_loader)
    {
        event_user(3);
    }
    with(obj_gotoQuestionnarie)
    {
        instance_destroy();
    }
    
    timer = instance_create(10 , 10 , obj_timer_questionnarie);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.networkIsConnected ==1)
{
    pressed = true;
    draw = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font2/*_questionnarie*/);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
if(draw == 0)
{
    if(alpha&lt;1.02)
        alpha += 0.02;
    else if(beta&lt;1.02)
        beta += 0.02;
    else if(teta &lt;1.02)
        teta += 0.02;

    
    draw_text_transformed_color(room_width/2, room_height/2 -100 , firstLine,
                                 alpha, 1.2, 0, c_black, c_black, c_black, c_black, alpha);
    
    if(alpha == 1.02)
        draw_text_transformed_color(room_width/2, room_height/2-10 , secondLine,
                                 beta, 1.2, 0, c_black, c_black, c_black, c_black, beta);
       
                                 
    if(beta == 1.02)
        draw_text_transformed_color(room_width/2, room_height/2 +80 , thirdLine,
                                 teta, 1.2, 0, c_black, c_black, c_black, c_black, teta);                          
    if(teta == 1.02)
    {
        x = room_width/2;   y = room_height/2 + 170;
        draw_sprite_ext(spr_startQuest, 0 , x , y , 1 , 1 , 0 , -1 , 1);

    }
}
else if(draw == 1)
{
    draw_sprite_ext(spr_startQuest , 0 , x , y , 0.85 , 0.85 , 0 , -1 , 1);
}
else if(draw == 2)
{
    alpha -= 0.05;
    beta  -= 0.05;
    draw_text_transformed_color(room_width/2, (room_height/2 -100) , firstLine,
                                 alpha, 1.2, 0, c_black, c_black, c_black, c_black, alpha);
    
    draw_text_transformed_color(room_width/2, (room_height/2)-10 , secondLine,
                                 beta, 1.2, 0, c_black, c_black, c_black, c_black, beta); 
   
    draw_text_transformed_color(room_width/2, room_height/2 +80 , thirdLine,
                                 beta, 1.2, 0, c_black, c_black, c_black, c_black, beta);   
                                 
    draw_sprite_ext(spr_startQuest , 0 , x , y , 1 , 1 , 0 , c_gray , 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>51,35</point>
    <point>51,51</point>
  </PhysicsShapePoints>
</object>
