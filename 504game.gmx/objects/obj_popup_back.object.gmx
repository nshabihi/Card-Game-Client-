<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-601</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = 0;
localXCenter = global.xCenter;
localYCenter = global.yCenter;

localNumericalsXScale = global.numericalsXScale;
localNumericalsYScale = global.numericalsYScale;

if(global.popupType == 1) // register
{
    checkAlapha = 0;
    
    global.keyBoardIsActive = 0; // 1:keyboard is on screen
    global.whichInput       = 0; // 0: nothing  1: username input  2: email input
    global.whichToReplay    = 0; // which process!! to reply the keyboard text
    global.pressIsAllowed   = 1; // press is allowed
    
    var field = instance_create(localXCenter + 30*localNumericalsXScale,
                                localYCenter - 210*localNumericalsYScale,
                                obj_registerField);
    field.type = 1;    // 1: username    2: email
    
    var field = instance_create(localXCenter + 20*localNumericalsXScale,
                                localYCenter - 168*localNumericalsYScale,
                                obj_registerField);
    field.type = 2;    // 1: username    2: email
    
    var submit = instance_create(localXCenter,
                                 localYCenter + 10*localNumericalsYScale,
                                 obj_registerSubmit);
    
    instance_deactivate_object(obj_registerField);
    instance_deactivate_object(obj_registerSubmit);
}
else if(global.popupType == 2) // loginStrike Progress score popup 
{
    // nothing!
    
}else if(global.popupType == 3) // game result popup
{

}
else if(global.popupType == 4) // exam result popup
{
    with(obj_ProgressBarControler)
        {instance_destroy();}

    with(obj_showScore)
        {instance_destroy();}
}

else if(global.popupType == 5) // notification of badge
{


    //nothing!
}else if(global.popupType == 6)// leaderboard notification for progress levelUp
{
    //nothig
}
else if(global.popupType == 7) ////notification: improvement of total rank
{
    //nothing
}else if(global.popupType == 8) //version control
{
    //nothing
}
else if(global.popupType == 9) // tutorial: lvlSelection
{
    
}
else if(global.popupType == 10) // tutorial: badge
{
    
}
else if(global.popupType == 11) // tutorial: leaderboard
{
    
}
else if(global.popupType == 12) // tutorial: game
{
    
}
else if(global.popupType == 13) // tutorial: exam
{
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.yCenter = view_yview[0] + view_hview[0]/2;

if(alpha &lt; 1)
    alpha += 0.05;
draw_sprite_ext(spr_popup_back,0,
                global.xCenter,
                global.yCenter,
                10,10,0,-1,alpha);


if(alpha == 1)
{
    alpha = 2;
    var popupInc = instance_create(100,100,obj_popup_loader);

    if(global.popupType == 1) // register
    {
        instance_activate_object(all);
    }
    else if(global.popupType == 2) // loginStrike Progress score popup
    {
    
        global.scrollLevelSelection = 0;
        var ProgressLoginScore = instance_create(100,100,obj_loginPS_popup);
        //var PS_popup_submit    = instance_create(global.xCenter, global.yCenter + 150*global.numericalsYScale, obj_popup_submit);
        with(obj_gameLevels_parent)
        {
            can_select = 0;
        }
           
    }else if(global.popupType == 3) // game result popup
    {
        var ProgressLoginScore = instance_create(100,100,obj_gameResult_popup);
        var PS_popup_submit    = instance_create(global.xCenter, global.yCenter + 210*global.numericalsYScale, obj_popup_submit);

    }else if(global.popupType == 4) // exam result popup
    {
        var ProgressLoginScore = instance_create(100,100,obj_examResult_popup);
        var PS_popup_submit    = instance_create(global.xCenter, global.yCenter + 210*global.numericalsYScale, obj_popup_submit);
    }else if(global.popupType == 5) // notification of badge
    {
        global.scrollLevelSelection = 0;
        var ProgressLoginScore = instance_create(100,100,obj_badgeNotification_popup);
        //var PS_popup_submit    = instance_create(global.xCenter, global.yCenter + 210*global.numericalsYScale, obj_popup_submit);
        with(obj_gameLevels_parent)
        {
            can_select = 0;
        }
    }else if(global.popupType == 6)// leaderboard notification for progress levelUp
    {
        global.scrollLevelSelection = 0;
        var leadNotifyForLevelUp = instance_create(100,100,obj_lvlUp_leadNotification);
        with(obj_gameLevels_parent)
        {
            can_select = 0;
        }
    }
    else if(global.popupType == 7)// //notification: improvement of total rank
    {
        global.scrollLevelSelection = 0;
        var totalRankImprove = instance_create(100,100,obj_totalRankImprove_Notification);
        with(obj_gameLevels_parent)
        {
            can_select = 0;
        }
    }   
    else if(global.popupType == 8)// //notification: improvement of total rank
    {      
        var totalRankImprove = instance_create(100,100,obj_versionControl);
    }
    else if(global.popupType == 9) // tutorial: lvlSelection
    {
        var tempInstanceForPopup = instance_create(100, 100, obj_tutpopup_lvlselection);
    }
    else if(global.popupType == 10) // tutorial: badge
    {
        var tempInstanceForPopup = instance_create(100, 100, obj_tutpopup_badge);
    }
    else if(global.popupType == 11) // tutorial: leaderboard
    {
        var tempInstanceForPopup = instance_create(100, 100, obj_tutpopup_leaderboard);
    }
    else if(global.popupType == 12) // tutorial: game
    {
        var tempInstanceForPopup = instance_create(100, 100, obj_tutpopup_game);
    }
    else if(global.popupType == 13) // tutorial: exam
    {
        var tempInstanceForPopup = instance_create(100, 100, obj_tutpopup_exam);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>570,360</point>
    <point>570,570</point>
  </PhysicsShapePoints>
</object>
