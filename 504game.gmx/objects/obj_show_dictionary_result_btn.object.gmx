<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_search</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_key_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Key object for the enter key

vheight = view_hview[0];
vwidth = view_wview[0];
xview   = view_xview[0];
yview   = view_yview[0];

image_index = 0;
image_speed = 0;
flag= 1;
text = "";
text1 = "";
text2 = "";
url = "";
idd = "";
// keeping length of username and email input
username_length = 0; 
email_length = 0;

verb_existance_error = 0;

drawPressed = 0;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(drawPressed == 1)
    drawPressed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(drawPressed == 1)
{
    drawPressed = 0;
    verb_existance_error = 0;
    verbExists = false;
        
    
    if(!is_undefined(ds_map_find_value(global.card_vocab, string_lower(global.text_input_dictionary))))
    {
        for(i=0 ; i&lt;100 ; i++)
        {
            if(global.verbDataBase [i] == string_lower(global.text_input_dictionary))
            {
                verbExists = true;
                global.verbID = global.verbDataBase[i];
                break;
            }
        }
    }
    
    if(verbExists == true)
    {

        global.httpID[5] = 1;
        
        requestAddress  = global.baseUrl + "Search/searchVocab?";
        requestAddress += "Auth="   + string(global.deviceId) + "," + string(global.username);
        requestAddress += "&amp;vocab=" + string(global.verbID);
        

        scr_enqueueReqQ(requestAddress,"searchVocab");
        
        
        //initializing room
        dwidth = ds_map_find_value(global.roomInt , "dwidth");
        dheight = ds_map_find_value(global.roomInt , "dheight");
        xview = ds_map_find_value(global.roomInt , "xview");
        yview = ds_map_find_value(global.roomInt , "yview");
        vwidth = ds_map_find_value(global.roomInt , "vwidth");
        vheight = ds_map_find_value(global.roomInt , "vheight");
        room_set_view(room_showMeaning, 0, 1, xview, yview , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
        //end of initializing room
        room_goto(room_showMeaning);
    }
    else
    {
        verb_existance_error = 1;
        global.text_input_dictionary = "";
        with(obj_parentOfKey)
        {
            keyboard_string = "";
        }
    }   
}


//with (obj_registerKeyboard){active = 2;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(drawPressed == 0)
    drawPressed = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var scale = 0.7;
switch(drawPressed)
{
    case 0:
        draw_sprite_ext(spr_search , 0 , x , y , scale , scale,0 , -1 , 1 );
    break;
    
    case 1:
        draw_sprite_ext(spr_search , 0 , x , y , scale * 0.9 , scale * 0.9,0 , -1 , 1 );
    break;
}

var tempColor = make_color_rgb(156,102,61);
draw_set_color(c_white);
draw_set_font(fnt_bigJohn);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
if (verb_existance_error == 1)
    draw_text_transformed(xview + vwidth / 2 , yview + 255 * (vheight / 720) , "Word not found. Try again please.", 0.5, 0.5, 0);

/*

draw_text(30, 300 , url);
draw_text(30, 350 , text);
draw_text(30, 400 , idd);
draw_text(30, 450 , text1);
draw_text(30, 500 , text2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
