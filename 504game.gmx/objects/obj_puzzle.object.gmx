<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0 ; i&lt;60 ; i++)
alpha[i] = 0;
draw=1;


for(i=0; i&lt;60 ; i++)
{
scale_x[i] = 1;
scale_y[i] = 1;
//alpha[i]=1;
rot[i]=0;

}

//initializing room
xview = view_xview[0];
yview = view_yview[0];
vwidth = view_wview[0];
vheight = view_hview[0];
//end of initializing room
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.question_num &gt; 0  and global.question_num&lt;61)
{
    draw_background_ext(back_puzzle,xview , yview, 1.17 *(vwidth/1140), 1.17 *(vheight/720), 0 , -1 , 1);
}


if(draw == 1)
{
    for(i=0; i&lt;60;i++)
        alpha[i] += 0.1
    if (alpha[0]==1) draw=2;
}

if(global.hidePuzzle == 1)
{
    //scale_x[global.PuzzlePieceId] -= 0.1;
    //scale_y[global.PuzzlePieceId] -= 0.1;
    if(scale_x[global.PuzzlePieceId] == 0)
        global.hidePuzzle = 0;
        
    alpha[global.PuzzlePieceId] -= 0.1;
    if(alpha[global.PuzzlePieceId] == 0)
        global.hidePuzzle = 0;
}

for(i=0 ; i&lt;6 ; i++)
    for(j=0; j&lt;10 ; j++)
    draw_sprite_ext(spr_puzzle2 , i*10+j , xview , yview , (vwidth/1140)*scale_x[i*10+j] , (vheight/720)*scale_y[i*10+j] , rot[i*10+j],-1,alpha[i*10+j]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
