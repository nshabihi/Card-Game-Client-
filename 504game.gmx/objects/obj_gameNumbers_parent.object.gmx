<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_name = object_get_name(object_index);
levelNumber = real(string_copy(obj_name , 16 , string_length(obj_name)-15));
levelNum = floor((real(levelNumber)-1)/7)+1;
subLevelNum = string((real(levelNumber-1)%7)+1);
xx = 0;
yy = 50;
r=10;
// with this object show stars obove the other objects
var starShow = instance_create(x ,y , obj_starDrawing);
starShow.levelNumber = levelNumber;


alpha = 2*pi;
maxAlpha = alpha;
alpha_star = 6*pi;
maxDGA = alpha_star;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_name = object_get_name(object_index);
levelNumber = real(string_copy(obj_name , 16 , string_length(obj_name)-15));
spr = asset_get_index("spr_levelNum_" + string(levelNumber));

if((string(levelNumber)) == string((real(global.levelNum)-1)*7 + real(global.subLevelNum)))
{
    if(xx&lt;150)
    {
    yy -= 10;
    xx += 10;
    r+=5;
    xd = r*sin(xx);
    yd = r*cos(xx);
    
    //effect_create_below(ef_firework, x +xd , y +yd,  choose(0, 1), merge_color(c_white, c_yellow, random(1)));
    //effect_create_below(ef_spark, x +xd , y +yd, choose(0 , 1 , 2), merge_color(c_white, c_yellow, random(1)));
    /*
    effect_create_below(ef_star, x - 40 - xx/2 + random(sprite_width + 80 +xx), y +yy+ random(20),  choose(0, 1), merge_color(c_white, c_yellow, random(1)));
    effect_create_below(ef_spark, x - 40 - xx/2 + random(sprite_width + 80+xx), y +yy+ random(20), choose(0 , 1 , 2), merge_color(c_white, c_yellow, random(1)));
    
    effect_create_below(ef_star, x - 40 - xx/2 + random(sprite_width + 80 +xx), y +yy+ random(20),  choose(0, 1), merge_color(c_white, c_yellow, random(1)));
    effect_create_below(ef_spark, x - 40 - xx/2 + random(sprite_width + 80+xx), y +yy+ random(20), choose(0 , 1 , 2), merge_color(c_white, c_yellow, random(1)));
    
    effect_create_below(ef_star, x - 40 - xx/2 + random(sprite_width + 80 +xx), y +yy+ random(20),  choose(0, 1), merge_color(c_white, c_yellow, random(1)));
    effect_create_below(ef_spark, x - 40 - xx/2 + random(sprite_width + 80+xx), y +yy+ random(20), choose(0 , 1 , 2), merge_color(c_white, c_yellow, random(1)));
    
    effect_create_below(ef_star, x - 40 - xx/2 + random(sprite_width + 80 +xx), y +yy+ random(20),  choose(0, 1), merge_color(c_white, c_yellow, random(1)));
    effect_create_below(ef_spark, x - 40 - xx/2 + random(sprite_width + 80+xx), y +yy+ random(20), choose(0 , 1 , 2), merge_color(c_white, c_yellow, random(1)));
    */
    }
    //effect_create_below(ef_star, x - 40 + random(sprite_width + 80), y - 64+ random(sprite_height + 128),  choose(0, 1), merge_color(c_white, c_yellow, random(1)));
    //effect_create_below(ef_spark, x - 40 + random(sprite_width + 80), y - 64+ random(sprite_height + 128), choose(0 , 1 , 2), merge_color(c_white, c_orange, random(1)));
    if(alpha &lt;= pi/2) alpha = pi/2;
    alphaDraw= sqrt(alpha)*sin(alpha)/(maxAlpha);
    alpha -= pi/8;
    draw_sprite_ext(spr, 0, x , y , 1+alphaDraw, 1+alphaDraw, 0, -1 , 1);
}
else
    if((real(levelNum)-1)*7+real(subLevelNum)
                &lt; global.indexOfLastLevel+2 and string_length(global.userPersonality) == 4)     
    {
        draw_sprite(spr , 0 , x, y);
    }
    else
    {
        col= make_color_rgb(88,74,115);
        draw_sprite_ext(spr, 0, x, y, 1, 1, 0, col, 1);
    }

//draw_text(x, y , y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
