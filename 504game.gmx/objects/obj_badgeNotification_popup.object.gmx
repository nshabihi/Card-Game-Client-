<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-605</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>badgeNotification_draw = 1;
notificationNum  = -1;
xview  = view_xview[0];
yview  = view_yview[0];
vwidth = view_wview[0];
vheight= view_hview[0];


for(var i = 0; i &lt; 20; i++)    
    if(global.userBadgeGained[i] == 1) //notice: if we have multiple badges this if will set the last one
    {
        notificationNum = i;
        global.userBadgeGained[i] = 0;
        break;
    }
  
counter = 0;  


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.scrollLevelSelection   = 1;

with(obj_levelSelectionRoom_loader)
{
    event_user(0);
}

with(obj_popup_loader)
{
    instance_destroy();
}
with(obj_popup_back)
{
    instance_destroy();
}
with(obj_badgeNotification_popup)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_bigJohn);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);
font_scale = 0.7;
isScore = 0;
global.yCenter = view_yview[0] + view_hview[0]/2;

numbers[0] = "FIRST";
numbers[1] = "12,000";
numbers[2] = "3";
numbers[3] = "7";
numbers[4] = ""; //streak
numbers[5] = "40,000";
numbers[6] = "12";
numbers[7] = "THIRD"; 
numbers[8] = ""; //streak
numbers[9] = "FIFTH"; 
numbers[10] = "85,000"; 
numbers[11] = "18"; 
numbers[12] = ""; //streak
numbers[13] = "25"; 
numbers[14] = "170,000"; 
numbers[15] = "34"; 
numbers[16] = "TENTH"; 
numbers[17] = ""; //streak
numbers[18] = ""; //streak
numbers[19] = "42"; 

switch(notificationNum)
{
    //badge for league
    case 0:
    case 7:
    case 9:
    case 16:
        notificationType = 1; //league
        notificationText = "LEAGUE WINNER!";
        notificationInt =  numbers[notificationNum];
        notificationDiscription1 = " TIME OF";
        notificationDiscription2 = "WINNING THE LEAGUE!";
    break;
    
    //badge for score
    case 1:
    case 5:
    case 10:
    case 14:
        notificationType = 2; //score
        notificationText = "SCORE HERO!"
        notificationInt = numbers[notificationNum];
        notificationDiscription1 = "YOU BEAT THE";
        notificationDiscription2 = "SCORE OF ";
        isScore = 1;
    break;
    
    //badeg for learning words
    case 2:
    case 3:
    case 6:
    case 11:
    case 13:
    case 15:
    case 19:
        notificationType = 3; //learning
        notificationText = "GOOD LEARNER!";
        notificationInt =  numbers[notificationNum];
        notificationDiscription1 = " WORDS";
        notificationDiscription2 = "RECORDED IN YOUR MEMORY!";
    break;
}   
tempColor = make_color_rgb(128,67,53);
draw_set_color(tempColor);



//sprite                      
draw_sprite_ext(spr_username_textbox,0,
                global.xCenter + 10*global.numericalsXScale,
                global.yCenter - 140*global.numericalsYScale,
                1,0.8,0,-1,1);

//notificationText
tempColor = make_color_rgb(166,178,188);
draw_set_color(tempColor);
draw_set_halign(fa_center);

draw_text_transformed(global.xCenter ,
                      global.yCenter - 140*global.numericalsYScale,
                      notificationText,font_scale,font_scale,0);
if(isScore == 0)
{
    //notificationInt
    draw_set_halign(fa_center);
    tempColor = make_color_rgb(101,53,42);
    draw_set_color(tempColor);
    draw_text_transformed(global.xCenter - font_scale*(string_width(notificationDiscription1))/2 - 5,
                          global.yCenter - 50*global.numericalsYScale,
                          notificationInt,font_scale,font_scale,0);
                          
    //notificationDiscription : first line                     
    draw_text_transformed(global.xCenter + font_scale*(string_width(notificationInt))/2,
                          global.yCenter - 50*global.numericalsYScale ,
                          notificationDiscription1 ,font_scale,font_scale,0);
    
    //notificationDiscription : second line
    draw_text_transformed(global.xCenter,
                          global.yCenter - 1*global.numericalsYScale ,
                          notificationDiscription2 ,font_scale,font_scale,0);

}
else // is score == 1
{
    //notificationInt
    draw_set_halign(fa_center);
    tempColor = make_color_rgb(101,53,42);
    draw_set_color(tempColor);
    draw_text_transformed(global.xCenter + font_scale*(string_width(notificationDiscription2))/2 + 5,
                          global.yCenter - 1*global.numericalsYScale,
                          notificationInt,font_scale,font_scale,0);
                          
    //notificationDiscription : first line                     
    draw_text_transformed(global.xCenter,
                          global.yCenter - 50*global.numericalsYScale ,
                          notificationDiscription1 ,font_scale,font_scale,0);
    
    //notificationDiscription : second line
    draw_text_transformed(global.xCenter - font_scale*(string_width(notificationInt))/2,
                          global.yCenter - 1*global.numericalsYScale ,
                          notificationDiscription2 ,font_scale,font_scale,0);  
}
if(global.userBadgeEnable == true)
{
    //drawing sparks and badge
    spr = asset_get_index("spr_badge_"+string(notificationNum+1)); 
    
    spr_scale = 0.8;                     
    x_spark = global.xCenter-((sprite_get_width(spr)*(5/6)*spr_scale/2))*global.numericalsXScale + random(sprite_get_width(spr)*(5/6)*spr_scale);
    y_spark = global.yCenter + (120-((sprite_get_height(spr)*(5/6)*spr_scale/2)+5))*global.numericalsYScale + random(sprite_get_height(spr)*(5/6)*spr_scale+10);
    
    counter++;
    if(counter mod 2 == 0)
        if(notificationNum &lt;6)
        {
            col_1 = c_white; 
            col_2 = make_color_rgb(239, 142 , 112);
            effect_create_above(ef_spark,   x_spark, y_spark, choose(0, 1), merge_colour(col_1,col_2, random(1)));
        }else if(notificationNum&lt;12)
        {
            col_1 = c_white; 
            col_2 = make_color_rgb(138, 138 , 138);        
            effect_create_above(ef_spark,   x_spark, y_spark, choose(0, 1), merge_colour(col_1,col_2, random(1)));
        }else
        {
            col_1 = c_white; 
            col_2 = make_color_rgb(249, 219 , 32);        
            effect_create_above(ef_spark,   x_spark, y_spark, choose(0, 1), merge_colour(col_1,col_2, random(1)));
        }    
    
    draw_sprite_ext( spr , 0 ,  global.xCenter /*+ 100*global.numericalsXScale*/,
                                global.yCenter + 120*global.numericalsYScale,
                                 spr_scale , spr_scale , 0 , -1 , 1);
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
