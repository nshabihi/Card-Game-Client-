<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000000</depth>
  <persistent>0</persistent>
  <parentName>obj_roomLoaderParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();


xview  = view_xview[0];
yview  = view_yview[0];
vwidth = view_wview[0];
vheight= view_hview[0];

badgeNotification_draw = 0;

global.levelNum = "";
global.subLevelNum = "";

//if(room == rm_gameWorld or room == room_exam_new)
//{
if(global.checkPlayingSound == true)
{
    audio_play_sound(snd_fun_backgound,10,true);
    audio_sound_gain(snd_fun_backgound, global.MenuVObj_X/200, 1000);
    global.checkPlayingSound = false;
}
//}


var scroll = instance_create(100 , 100 , obj_scrolling_levels);

//var levels = instance_create(100 , 101 , obj_gameLevel_1);


global.imLock = 10000; // level that just now became unlocked
global.lock[30] = 0;
global.lock[0] = 0;
for (i=1 ; i&lt;30 ; i++)
    global.lock[i] = 1;

////////////////////////////////////////////////    
global.cardAppearFreq[300] = 0;
for (i=0 ; i&lt;300 ; i++)
    global.cardAppearFreq[i] = 0;
 
      
global.drawLock1 = 300; // change in alarm 8 of obj_card and use in draw of obj_subLevels 


global.cardInSubLevelRnadList[300] = "0000000";
for (i=0 ; i&lt;300 ; i++)
    global.cardInSubLevelRnadList[i] = "0000000";

    
//for test

/*global.progressLevelUped = 1;  
global.userLoginProgressScore = 20; 
global.userLoginStrike = 3;

global.userBadgeGained[19] = 1;
global.userBadgeGained[6] = 1;
global.userBadgeGained[0] = 1;*/
//global.notificationOfTotalRankImprovement = 1;
//global.progressLevelUped = 1; 
//global.userBadgeGained[1] = 1;


badgeFlag = 0;
for(var i = 0; i &lt; 20; i++)    
    if(global.userBadgeGained[i] == 1)
    {
        badgeFlag = 1;
        break;
    }

//disable badge and leaderboard if needed
if(global.userBadgeEnable == false and global.userFeedbackEnable == false)
    badgeFlag = 0;
if(global.userLeaderboardEnable == false)
{
    global.progressLevelUped = 0;
    global.notificationOfTotalRankImprovement = 0;
    global.userBadgeGained[0] = 0;
    global.userBadgeGained[7] = 0;
    global.userBadgeGained[9] = 0;
    global.userBadgeGained[16] = 0;
    
}
//////////////////////////////////////////

if(global.userLoginProgressScore &gt; 0)
{
    alarm[1] = room_speed / 2;
}else if(badgeFlag == 1)
{
    alarm[2] = room_speed / 2;
}else if(global.progressLevelUped == 1) // progress level up: leaderboard notification
{
    alarm[3] = room_speed /2;
}else if(global.notificationOfTotalRankImprovement == 1) //notification: improvement of total rank
{
    alarm[4] = room_speed /2;
}

global.tutorialType = 1; // lvl selection
//instance_create(100, 100, obj_tutorial);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.popupType  = 7; // leaderboard notification for progress levelUp
var popupBack     = instance_create(0,0,obj_popup_back);
global.notificationOfTotalRankImprovement = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.popupType  = 6; // leaderboard notification for progress levelUp
var popupBack     = instance_create(0,0,obj_popup_back);
global.progressLevelUped = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.popupType  = 5; // loginStrike Progress score popup
var popupBack     = instance_create(0,0,obj_popup_back);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.popupType  = 2; // loginStrike Progress score popup
var popupBack     = instance_create(0,0,obj_popup_back);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
/*badgeFlag = 0;
for(var i = 0; i &lt; 20; i++)    
    if(global.userBadgeGained[i] == 1)
    {
        badgeFlag = 1;
        break;
    }
//disable badge and leaderboard if needed
if(global.userBadgeEnable == false)
    badgeFlag = 0;
if(global.userLeaderboardEnable == false)
{
    global.progressLevelUped = 0;
    global.notificationOfTotalRankImprovement = 0;
}
//////////////////////////////////////////

if(global.userLoginProgressScore &gt; 0)
{
    alarm[1] = room_speed / 2;
}else if(badgeFlag == 1)
{
    alarm[2] = room_speed / 2;
}else if(global.progressLevelUped == 1) // progress level up: leaderboard notification
{
    alarm[3] = room_speed /2;
}else if(global.notificationOfTotalRankImprovement == 1) //notification: improvement of total rank
{
    alarm[4] = room_speed /2;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>badgeFlag = 0;
for(var i = 0; i &lt; 20; i++)    
    if(global.userBadgeGained[i] == 1)
    {
        badgeFlag = 1;
        break;
    }
    
    
if(global.userLoginProgressScore &gt; 0)
{
    alarm[1] = room_speed / 2;
}

else if(badgeFlag == 1)
{
    alarm[2] = room_speed / 2;
}

else if(global.progressLevelUped == 1) // progress level up: leaderboard notification
{
    alarm[3] = room_speed /2;
}
else if(global.notificationOfTotalRankImprovement == 1) //notification: improvement of total rank
{
    alarm[4] = room_speed /2;
}
else
{
    with(obj_gameLevels_parent)
    {
        can_select = 1;
    }
    
    global.scrollLevelSelection   = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();


draw_sprite_ext(spr_levelSelection_1,0 , 0 , 5660 - 1691 , 2 , 2.002 , 0 , -1 , 1);
draw_sprite_ext(spr_levelSelection_2,0 , 0 , 5660 - 1691 - 1943 , 2 , 2.002 , 0 , -1 , 1);
draw_sprite_ext(spr_levelSelection_3,0 , 0 , 5660 - 1691 - 1943 - 2027 , 2 , 2.002 , 0 , -1 , 1);

draw_sprite_ext(spr_moreLevels, 0, room_width / 2, 100 * (view_hview[0] / 720),1,1, -10,-1,1);
/*
draw_set_color(c_black);
draw_text(room_width/2-100 , view_yview[0] +30 , global.loadingServerExistance);
draw_text(room_width/2+30-100 , view_yview[0] +30 , global.networkIsConnected);
draw_text(room_width/2+200 , view_yview[0] +60 ,global.SendingPingEnable);
//draw_text(room_width/2+200 , view_yview[0] +60 ,current_time);

//global.userLeaderboardEnable = true;
//global.userBadgeEnable = true;
//global.userFeedbackEnable = true;

/*draw_set_color(c_black);
draw_text(view_xview[0] + 250, view_yview[0] + 250, "leaderboard = " + string(global.userLeaderboardEnable));
draw_text(view_xview[0] + 250, view_yview[0] + 300, "badge = " + string(global.userBadgeEnable));
draw_text(view_xview[0] + 250, view_yview[0] + 350, "feedback = " + string(global.userFeedbackEnable));*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
