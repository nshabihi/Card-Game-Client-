<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_questionnarie_hud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-599</depth>
  <persistent>0</persistent>
  <parentName>obj_hudParent</parentName>
  <maskName>spr_questionnariue_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_inherited();
questionnarieBtn = 0;
type = "questionnarie";


//initializing room
xview = view_xview[0];
yview = view_yview[0];
vwidth = view_wview[0];
vheight = view_hview[0];
//end of initializing room


drawAlpha = 6*pi;
alpha = 1;
maxDGA = drawAlpha;
wait = 1;
alarm[0] = room_speed * 1;

text1 = "ÂTÃ~h{ OÃU IM KwI¹T¶ ÁpIM ¸ÄH";
text2 = "·¼§ÄA Á»n .SwH ½k{ ÂeHoö jHoÎH";
text3 = ",kÃ¹¨ oQ Hn¾¶I¹zwoQ ,kÃ¹¨ ¦Ã±¨ ¯IM";
text4 = "ÁpIM » kÃºHkM Hn ·ITÃTÃ~h{ OÃU";
text5 = ".kÃ{IM ¾T{Hj Hn ·IUj¼i }Th¶";
textWidth = string_width(text1);




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait = 0;
drawAlpha = 6*pi;
alpha = 1;
maxDGA = drawAlpha;
alarm[1] = room_speed * 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait = 0;
alarm[1] = room_speed*5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>questionnarieBtn = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(questionnarieBtn == 1)
{
    if(room == room_levelSelection)
    {
        //initializing room
        dwidth = ds_map_find_value(global.roomInt , "dwidth");
        dheight = ds_map_find_value(global.roomInt , "dheight");
        xview = ds_map_find_value(global.roomInt , "xview");
        yview = ds_map_find_value(global.roomInt , "yview");
        vwidth = ds_map_find_value(global.roomInt , "vwidth");
        vheight = ds_map_find_value(global.roomInt , "vheight");
        room_set_view(room_qest, 0, 1, xview, yview , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
        room_goto(room_qest);
        //end of initializing room
    }
    
    else if(room == room_setting)
    {
        //initializing room
        dwidth = ds_map_find_value(global.roomInt , "dwidth");
        dheight = ds_map_find_value(global.roomInt , "dheight");
        xview = ds_map_find_value(global.roomInt , "xview");
        yview = ds_map_find_value(global.roomInt , "yview");
        vwidth = ds_map_find_value(global.roomInt , "vwidth");
        vheight = ds_map_find_value(global.roomInt , "vheight");
        room_set_view(room_questionnarieResult, 0, 1, xview, yview , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
        room_goto(room_questionnarieResult);
        //end of initializing room
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.networkIsConnected ==1)
    if(can_press == 1)
        questionnarieBtn = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//no inheritance
if(type == "questionnarie1")
{
        xx = xview+vwidth-30;
        yy = y +100;
        draw_set_alpha(0.5);
        draw_roundrect_color(   xview+vwidth-430 , y + 95,
                                xview+vwidth-20 , y+ 300  , c_black , c_black , false );
        draw_set_alpha(1);   
        draw_set_halign(fa_right);
        draw_set_valign(fa_top);
        draw_set_font(font2);
        draw_set_color(c_white);
        draw_text(xx , y + 100 , text1);
        draw_text(xx , y + 100+35 , text2);
        draw_text(xx , y + 100+70 , text3);
        draw_text(xx , y + 100+105 , text4);
        draw_text(xx , y + 100+140 , text5);
        
    if(wait == 0)
    {
        if(drawAlpha &lt;= pi/2) drawAlpha = pi/2;
        alpha= sqrt(drawAlpha)*sin(drawAlpha)/(maxDGA);
        drawAlpha -= pi/8;
        draw_sprite_ext(spr_questionnarie_hud, 0 , x, y, (scale+(1/2)*alpha), (scale+(1/2)*alpha), 0 , -1 , 1);
    }
    //time for age questionnarie
    else if(drawAlpha == pi/2)
    {
        draw_sprite_ext(spr_questionnarie_hud, 0 , x , y ,scale, scale, 0 , -1  , 1);
        wait ++;
    }
    else
        draw_sprite_ext(spr_questionnarie_hud, 0 , x , y ,scale, scale, 0 , -1  , 1);
        

}

else if(type == "questionnarie2")
{
    draw_sprite_ext(spr_questionnarie_hud, 0 , x , y ,scale, scale, 0 , -1  , 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>50,30</point>
    <point>50,50</point>
  </PhysicsShapePoints>
</object>
