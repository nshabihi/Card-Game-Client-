<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>obj_roomLoaderParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

audio_sound_gain(snd_fun_backgound, 0, 500);
global.checkPlayingSound = true;
alarm[1] = room_speed / 2;


draw = 1;
//initializing room
xview = view_xview[0];
yview = view_yview[0];
vwidth = view_wview[0];
vheight = view_hview[0];
//end of initializing room
      
var puzzle = instance_create(0 , 0 , obj_puzzle);
seaCounter=0;
CurSurface = -1;

global.question_num = 0;

with(obj_bottomBar)             { instance_destroy(); }
with(obj_ProgressBarControler)  { instance_destroy(); }
with(obj_showScore)             { instance_destroy(); }
with(obj_setting)               { instance_destroy(); }
with(obj_dictionary)            { instance_destroy(); }
with(obj_badges)                { instance_destroy(); }
with(obj_leaderBoard)           { instance_destroy(); }
//with(obj_map)                   { instance_destroy(); }
with(obj_exam)                  { instance_destroy(); }
if(object_exists(obj_questionarie))
    with(obj_questionarie)          { instance_destroy(); }

//initialization of room
dwidth = ds_map_find_value(global.roomInt , "dwidth");
dheight = ds_map_find_value(global.roomInt , "dheight");
xview = ds_map_find_value(global.roomInt , "xview");
yview = ds_map_find_value(global.roomInt , "yview");
vwidth = ds_map_find_value(global.roomInt , "vwidth");
vheight = ds_map_find_value(global.roomInt , "vheight");

/////////////////////////////
//instance_deactivate_object(ui_listbox_horz_questionnarie);


/////////////   gender question initialization  /////////////////
global.gender = 0;
drawGenderType = 0;
drawGenderAlpha = 6*pi;
alphaG = 1;
maxDGA = drawGenderAlpha;
global.genderId[0]=0;
global.genderId[1]=1;
var gender = instance_create( room_width/2 - 100 , room_height/2 ,obj_gender);
    gender.type = 1; //"female";
    global.genderId[0] = gender.id;
var gender = instance_create( room_width/2 + 100 , room_height/2 ,obj_gender);
    gender.type = 2; //"male";
    global.genderId[1] = gender.id;
    
/////////////   age question initialization  /////////////////
global.ageSelected = 0;
activeAge = 0;
global.age = 0;
drawAgeAlpha = 6*pi;
alphaA = 1;
alpha_start_age = 0;
ageText = ".kÃ¹¨ JIhTºH Hn j¼i ¸w IŸõ²";

for(i=0; i&lt;61 ;i++)
    global.randPuzzle[i] = i;
global.puzzleArrayLength = 59;
global.hidePuzzle = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_pause_sound(snd_fun_backgound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var goToWuestionnarie = instance_create(room_width/2 , room_height/2 + 100 , obj_gotoQuestionnarie);

with(obj_questionnarieNext)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xview = view_xview[0];
yview = view_yview[0];
vwidth = view_hview[0];

global.timer_questionnarie[60] = -1;
    for(i=0 ; i&lt;60 ; i++)
        global.timer_questionnarie[i] = -1;

global.answer[120] = -1;
    for(i=0 ; i&lt; 125 ; i++)
        global.answer[i] = -1;

for (i=0; i&lt;2; i++)
{
    var radioBtn = instance_create(xview + vwidth - 100 , yview + 80 + 60*i , obj_radio);
    radioBtn.num = i;
    global.radioID[i] = radioBtn.id;
} 
global.question_num = 1;
global.lastQuestion = 1;
global.drawQuestion= -1;
var previouseBtn = instance_create(xview + 200 , yview + 450 , obj_questionariePreviouse);

//questionnarie badge
for (i=1; i&lt;61; i+=1)
{
    global.questionnarieBadge[i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawQuestionnarieStart = 1;

//instance_deactivate_all(true);
with(ui_listbox_horz_questionnarie)
{
    instance_destroy();
    draw = 0;
}


alarm[0] = room_speed*0.5;






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawAgeAlpha = 6*pi;
global.ageSelected = 1;
age = global.age;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_exists(obj_gender)
    {//instance_deactivate_object(obj_gender)
    //instance_destroy();
    }
with (ui_listbox_horz_questionnarie) {y = room_height/2;}

//instance_activate_region(xview, yview, vwidth, vheight, true);

activeAge = 1;
var nextBtn = instance_create(xview+vwidth-150, yview+vheight-150, obj_questionnarieNext);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 
if(global.question_num &gt; 0  and global.question_num&lt;61)   //60 questions of questionnarie started
{ 
   //col = make_color_rgb(254,248,203); // rectangle color
    //draw_set_color(col);
    //draw_clear_alpha(col, 0.2);
    //draw_roundrect_color(400 , 300 ,450, 350 , col , col , true );
/*    draw_set_font(fnt_bigJohn);
    draw_set_color(c_black);
    draw_text(room_width/2 , room_height/2 , "textetxtetextetxetxttt");
    draw_set_alpha(0.6);
    draw_roundrect_color((1140-700)/2 - 50 , (720-140)/2 - 100 ,(1140-700)/2 +700+50 , (720-140)/2 +140 + 20 , c_white , c_white , false );



*/
}
else
{
    if(draw == 1)
    {
        //end of gender selection
        if(drawGenderType == 1)
        {
        if(drawGenderAlpha &lt;= pi/2) drawGenderAlpha = pi/2;
        alphaG= sqrt(drawGenderAlpha)*sin(drawGenderAlpha)/(maxDGA);
        drawGenderAlpha -= pi/8;
        draw_sprite_ext(spr_gender, global.gender-1 , vwidth+xview - 100, yview +100, (1/2)*(1+alphaG), (1/2)*(1+alphaG), 0 , -1 , 1);
        
        //time for age questionnarie
        if(drawGenderAlpha == 2*pi)    
            {event_user(0);}
        }
        //show age question
        if(activeAge == 1)
        {
            alpha_start_age += 0.1; if(alpha_start_age &gt; 1) alpha_start_age = 1;
            draw_set_font(font2);
            draw_set_halign(fa_right);
            /*draw_text_transformed_color(xview+vwidth-vwidth/8, yview+vheight/4 , ageText,
                                  1, 1, 0, c_blue, c_blue, c_navy, c_navy, alpha_start_age);    */                      
        }
        //age selected: show the selected number for age
        if(global.ageSelected == 1)
        {
            if(drawAgeAlpha &lt;= pi/2) drawAgeAlpha = pi/2;
            draw_set_font(font2);
            draw_set_valign(fa_middle);
            draw_set_halign(fa_left);
            draw_set_color(c_black);
            alphaA= sqrt(drawAgeAlpha)*sin(drawAgeAlpha)/(maxDGA);
            drawAgeAlpha -= pi/8;
            draw_text_transformed(vwidth+xview - 250, yview +100, age, (2.2+alphaA), (2.2+alphaA), 0);
   
            //draw_circle(vwidth+xview - 100,yview +50, 20, true);
        }
            //draw_text_ext_transformed(vwidth+xview - 100,yview +50,age,1,1, (1/4)*(1+alphaA) , (1/4)*(1+alphaA), 0);
            //draw_sprite_ext(spr_gender, global.gender-1 , vwidth+xview - 50, yview +50, (1/4)*(1+alphaA), (1/4)*(1+alphaA), 0 , -1 , 1);
           
        /*if(drawGenderAlpha &gt; (4*pi))
            {
            effect_create_above(ef_spark, vwidth+xview - 50 + random(sprite_width), yview +50 + random(sprite_height), choose(0, 1), merge_color(c_white, c_yellow, random(1)));
            }*/
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
