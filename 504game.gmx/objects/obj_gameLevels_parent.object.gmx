<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//cheking frayand: hargez huzure hazere ghayeb shenideiiiiiiiiiiiiiiiiiiiiiiiiiii
// maaaaaaaaaaaaaaaaaaan dar miane jamo delaaaaaaaaaaaaaaaaaaaam jaye digaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar ast.

global.allowPress = true; // only one level can be pressed in a single time
pressed = false;
obj_name = object_get_name(object_index);
levelNumber = real(string_copy(obj_name , 15 , string_length(obj_name)-14));

levelNum = floor((real(levelNumber)-1)/7)+1;
subLevelNum = string((real(levelNumber-1)%7)+1);
global.LastPlayed_y = 0;
can_select = 1;
gotoLevel = 1;
yPosition = 0;  //for scroll vs click
draw_set_alpha(1);


xview  = view_xview[0];
yview  = view_yview[0];
vwidth = view_wview[0];
vheight= view_hview[0];

alpha = 0;
beta = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initializing room
dwidth = ds_map_find_value(global.roomInt , "dwidth");
dheight = ds_map_find_value(global.roomInt , "dheight");
xview = ds_map_find_value(global.roomInt , "xview");
yview = ds_map_find_value(global.roomInt , "yview");
vwidth = ds_map_find_value(global.roomInt , "vwidth");
vheight = ds_map_find_value(global.roomInt , "vheight");
room_set_view(rm_gameWorld, 0, 1, xview, yview , vwidth, vheight, 0, 0, dwidth, dheight, 0, 0, 0, 0, -1);
room_goto(rm_gameWorld);
//end of initializing room
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pressed = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>check = false; 
if(global.allowPress == true)
{
    
    if(pressed == true)
    {
        if(abs(yPosition - device_mouse_y(0)) &lt; 15)
        {
            pressed = false;
                if((real(levelNum)-1)*7+real(subLevelNum)
                        &lt; global.indexOfLastLevel+2)     
                {
                    check = true;
                    
                } 
        }
        else
        {
            global.allowPress = true;
        }
    }
}

/*
if(check == true)
if((real(levelNum)-1)*7+real(subLevelNum) &gt; 7 )
{
    if(file_exists("game504Data.ini"))
    {
        ini_open("game504Data.ini");
        //unlock date
        unlock_year =   ini_read_real("unlockLevelPerDay" , "UnlockYear" , 0);
        unlock_month =  ini_read_real("unlockLevelPerDay" , "UnlockMonth" , 0);
        unlock_day =    ini_read_real("unlockLevelPerDay" , "UnlockDay" , 0);
        unlock_hour =   ini_read_real("unlockLevelPerDay" , "UnlockHour" , 0); 
        validUntil =    ini_read_real("unlockLevelPerDay" , "unLockedTo" , 7);

        
        ini_close();
        unlockDate = date_create_datetime(unlock_year, unlock_month, unlock_day, unlock_hour , 0 , 0);
        //today date
        year = current_year;
        month = current_month;
        day = current_day;
        hour = current_hour;
        TodayDate = date_create_datetime(current_year, current_month, current_day, current_hour , 0 , 0);


        
        if(date_compare_datetime(TodayDate, unlockDate) != -1)
        {
            if((real(levelNum)-1)*7+real(subLevelNum) &lt;= validUntil)
            {
                gotoLevel = 1;
            }
            else
            {
                gotoLevel = 0;
            }
        }
        else
        {
            if((real(levelNum)-1)*7+real(subLevelNum) &lt;= validUntil-7)
            {
                gotoLevel = 1;
            }
            else
            {
                gotoLevel = 0;
            }
        }
            
    }
    else
    {
        gotoLevel = 1;
    }
}    
else
    gotoLevel = 1;
*/
    
gotoLevel = 1;
if(gotoLevel == 1)
{
global.levelNum = string(levelNum);
global.subLevelNum = string(subLevelNum);

alarm[0] = room_speed * 1;
global.allowPress = false;
}
else if(gotoLevel == 0)
{
    gotoLevel = 2;
    var unlockMsg = instance_create(10 , 10 , obj_unlockMsg);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.networkIsConnected ==1) //and string_length(global.userPersonality) == 4)
    {
        if(can_select == 1)
            pressed = true;
        
        yPosition = device_mouse_y(0);
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);

obj_name = object_get_name(object_index);
levelNumber = real(string_copy(obj_name , 15 , string_length(obj_name)-14));
spr = asset_get_index("spr_gameLevel_" + string(levelNumber));


if(y &gt; view_yview[0]-612 and y &lt; view_yview[0] + view_hview[0] + 612)
if((real(levelNum)-1)*7+real(subLevelNum)
                &lt; global.indexOfLastLevel+2   and  string_length(global.userPersonality) == 4)     
{
    draw_sprite(spr , 0 , x, y);
}
else
{
    col = make_color_rgb(36,0, 69);
    col= make_color_rgb(88,74,115);
    draw_set_color(col);
    draw_sprite_ext(spr, 0, x, y, 1, 1, 0, col, 1);
}
//draw_text(x , y , string(levelNumber));
//draw_text(x , y+10 , levelNum);
//draw_text(x , y+20 , subLevelNum);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
